–í—Å—Ç—É–ø –¥–æ –ø—Ä–æ—Ü–µ—Å—ñ–≤ Python




–ü–∞–∫–µ—Ç multiprocessing ‚Äî —Ü–µ –ø–∞–∫–µ—Ç –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–¥—É –≤ –æ–∫—Ä–µ–º–∏—Ö –ø—Ä–æ—Ü–µ—Å–∞—Ö –∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º, –ø–æ–¥—ñ–±–Ω–∏–º –¥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É –ø–∞–∫–µ—Ç–∞ threading.



–û—Å–Ω–æ–≤–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞ –ø–æ—è–≤–∏ multiprocessing ‚Äî —Ü–µ GIL (Global Interpreter Lock) —ñ —Ç–æ–π —Ñ–∞–∫—Ç, —â–æ threading API –Ω–µ –¥–æ–∑–≤–æ–ª—è—î —Ä–æ–∑–ø–∞—Ä–∞–ª–µ–ª—é–≤–∞—Ç–∏ CPU-bound –∑–∞–≤–¥–∞–Ω–Ω—è.



üí° –û—Å–∫—ñ–ª—å–∫–∏ –≤ –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç —á–∞—Å—É –∑–∞–≤–∂–¥–∏ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∫–æ–¥ —Ç—ñ–ª—å–∫–∏ –≤ –æ–¥–Ω–æ–º—É –ø–æ—Ç–æ—Ü—ñ, –Ω–∞–≤—ñ—Ç—å –Ω–∞ –±–∞–≥–∞—Ç–æ—è–¥–µ—Ä–Ω–∏—Ö —Å—É—á–∞—Å–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å–æ—Ä–∞—Ö, –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–∏—Ä—ñ—Å—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –¥–ª—è –∑–∞–≤–¥–∞–Ω—å, –ø–æ–≤'—è–∑–∞–Ω–∏—Ö –∑ —ñ–Ω—Ç–µ–Ω—Å–∏–≤–Ω–∏–º–∏ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è–º–∏, –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é threading –Ω–µ –≤–∏–π–¥–µ.


–©–æ–± –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –¥—ñ–π—Å–Ω–æ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ —Ç–∞–º, –¥–µ —Ü–µ –¥–æ–∑–≤–æ–ª—è—î –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, –≤ Python –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –æ–∫—Ä–µ–º—ñ –ø—Ä–æ—Ü–µ—Å–∏. –¢–∞–∫, —É –∫–æ–∂–Ω–æ–º—É –æ–∫—Ä–µ–º–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ –±—É–¥–µ –∑–∞–ø—É—â–µ–Ω–æ —Å–≤—ñ–π —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python –∑—ñ —Å–≤–æ—ó–º GIL.



–î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—ñ–≤ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —ñ–º–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ –∫–ª–∞—Å Process –º–æ–¥—É–ª—è multiprocessing.



–ó –Ω–∏–º –º–æ–∂–Ω–∞ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–æ–º–∞ —Å–ø–æ—Å–æ–±–∞–º–∏:

–£ –ø—Ä–æ—Ü–µ—Å—ñ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—É Process —ñ–º–µ–Ω–æ–≤–∞–Ω–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç—É target –ø–µ—Ä–µ–¥–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è –≤ –æ–∫—Ä–µ–º–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ.
–†–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ—Ö—ñ–¥–Ω–∏–π –∫–ª–∞—Å –≤—ñ–¥ –∫–ª–∞—Å—É Process —Ç–∞ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∏—Ç–∏ –º–µ—Ç–æ–¥ run.


–†–æ–∑–≥–ª—è–Ω–µ–º–æ –ø—Ä–∏–∫–ª–∞–¥:



from multiprocessing import Process
import logging
from time import sleep

logger = logging.getLogger()
stream_handler = logging.StreamHandler()
logger.addHandler(stream_handler)
logger.setLevel(logging.DEBUG)

class MyProcess(Process):
    def __init__(self, group=None, target=None, name=None, args=(), kwargs=None, *, daemon=None):
        super().__init__(group=group, target=target, name=name, daemon=daemon)
        self.args = args

    def run(self) -> None:
        logger.debug(self.args)

def example_work(params):
    sleep(0.5)
    logger.debug(params)

if __name__ == '__main__':
    processes = []
    for i in range(3):
        pr = Process(target=example_work, args=(f"Count process function - {i}", ))
        pr.start()
        processes.append(pr)

    for i in range(2):
        pr = MyProcess(args=(f"Count process class - {i}",))
        pr.start()
        processes.append(pr)

    [el.join() for el in processes]
    [print(el.exitcode, end=' ') for el in processes]
    logger.debug('End program')



–í–∏–≤–µ–¥–µ–Ω–Ω—è –±—É–¥–µ –Ω–∞—Å—Ç—É–ø–Ω–∏–º:



('Count process class - 1',)
('Count process class - 0',)
Count process function - 0
Count process function - 1
Count process function - 2
End program
0 0 0 0 0



–°–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –ø–∞—Ä–∞–ª–µ–ª—å–Ω–æ: –ø–æ–≤—Ç–æ—Ä—é–π—Ç–µ –≤—Å—ñ –¥—ñ—ó –∑–∞ –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–º —ñ –≤—ñ–¥–ø—Ä–∞—Ü—å–æ–≤—É–π—Ç–µ —Å–≤–æ—ó –∑–Ω–∞–Ω–Ω—è –æ–¥—Ä–∞–∑—É –Ω–∞ –ø—Ä–∞–∫—Ç–∏—Ü—ñ. 


–£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –º–∏ —Å—Ç–≤–æ—Ä–∏–ª–∏ –ø'—è—Ç—å –ø—Ä–æ—Ü–µ—Å—ñ–≤, —É —Ç—Ä—å–æ—Ö –∑ —è–∫–∏—Ö –≤–∏–∫–æ–Ω–∞–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—é example_work, –∞ —É –¥–≤–æ—Ö ‚Äî —Ü–µ –∫–ª–∞—Å MyProcess, —è–∫–∏–π –Ω–∞—Å–ª—ñ–¥—É—î—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É Process.



–£ –ø—Ä–æ—Ü–µ—Å—ñ–≤ —î –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ (0 –æ–∑–Ω–∞—á–∞—î —É—Å–ø—ñ—à–Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ —É —à—Ç–∞—Ç–Ω–æ–º—É —Ä–µ–∂–∏–º—ñ), —ñ –ø—ñ—Å–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –∞—Ç—Ä–∏–±—É—Ç exitcode –º—ñ—Å—Ç–∏—Ç—å –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è. –í —ñ–Ω—à–æ–º—É API multiprocessing –±–∞–≥–∞—Ç–æ –≤ —á–æ–º—É –ø–æ–≤—Ç–æ—Ä—é—î threading.



–ó–∞–≥–∞–ª—å–Ω—ñ –∑–∞—É–≤–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ—Ä–∞–¥–∏ –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ –ø—Ä–æ—Ü–µ—Å–∞–º–∏


–ó–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ multiprocessing –ø—ñ–¥—Ç—Ä–∏–º—É—î 3 —Å–ø–æ—Å–æ–±–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É:



spawn ‚Äî –∑–∞–ø—É—Å–∫–∞—î –Ω–æ–≤–∏–π –ø—Ä–æ—Ü–µ—Å Python, –Ω–∞—Å–ª—ñ–¥—É—é—Ç—å—Å—è –ª–∏—à–µ —Ä–µ—Å—É—Ä—Å–∏, –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–ª—è –∑–∞–ø—É—Å–∫—É run(). –ü—Ä–∏—Å—É—Ç–Ω—ñ–π –≤ Unix —ñ Windows. –Ñ —Å–ø–æ—Å–æ–±–æ–º –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –¥–ª—è Windows —ñ macOS.


fork ‚Äî –¥–æ—á—ñ—Ä–Ω—ñ–π –ø—Ä–æ—Ü–µ—Å, —â–æ —î —Ç–æ—á–Ω–æ—é –∫–æ–ø—ñ—î—é –±–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ–≥–æ (–≤–∫–ª—é—á–∞—é—á–∏ –≤—Å—ñ –ø–æ—Ç–æ–∫–∏), –¥–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –Ω–∞ Unix. –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–∞ Unix. –ó—Ä–æ–±–∏—Ç–∏ –±–µ–∑–ø–µ—á–Ω–∏–π fork –¥–æ—Å–∏—Ç—å –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏—á–Ω–æ —ñ —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—Ä–∏—á–∏–Ω–æ—é –Ω–µ–æ—á–µ–≤–∏–¥–Ω–∏—Ö –ø—Ä–æ–±–ª–µ–º.

forkserver ‚Äî —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –ø—Ä–æ—Ü–µ—Å-—Ñ–∞–±—Ä–∏–∫–∞ (—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ—Ä–æ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ—Ü–µ—Å—ñ–≤ –∑–∞ –∑–∞–ø–∏—Ç–æ–º). –ù–∞—Å–ª—ñ–¥—É—é—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ä–µ—Å—É—Ä—Å–∏, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è fork –¥–ª—è –∑–∞–ø—É—Å–∫—É –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É, –∞–ª–µ –∑–∞–≤–¥—è–∫–∏ –æ–¥–Ω–æ–ø–æ—Ç–æ–∫–æ–≤—ñ–π —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø—Ä–æ—Ü–µ—Å—É-—Ñ–∞–±—Ä–∏–∫–∏ —Ü–µ —Ä–æ–±–∏—Ç—å—Å—è –±–µ–∑–ø–µ—á–Ω–æ. –î–æ—Å—Ç—É–ø–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –Ω–∞ Unix –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ø–µ—Ä–µ–¥–∞—á—ñ —Ñ–∞–π–ª–æ–≤–∏—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä—ñ–≤ —á–µ—Ä–µ–∑ pipes (—â–æ –º–æ–∂–µ —Å—É–ø–µ—Ä–µ—á–∏—Ç–∏ –±–µ–∑–ø–µ–∫–æ–≤—ñ–π –ø–æ–ª—ñ—Ç–∏—Ü—ñ –Ω–∞ –±–∞–≥–∞—Ç—å–æ—Ö —Å–∏—Å—Ç–µ–º–∞—Ö).


–î–ª—è –≤–∏–±–æ—Ä—É –º–µ—Ç–æ–¥—É –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è multiprocessing.set_start_method(method)



import multiprocessing
...

if __name__ == '__main__':
    multiprocessing.set_start_method('forkserver')
    ...



–£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –º–∏ –≤–∏–±—Ä–∞–ª–∏ forkserver –º–µ—Ö–∞–Ω—ñ–∑–º —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ—á—ñ—Ä–Ω—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤.





–î–ª—è –º—ñ–∂–ø—Ä–æ—Ü–µ—Å–æ—Ä–Ω–æ—ó –≤–∑–∞—î–º–æ–¥—ñ—ó –≤–∏–æ–∫—Ä–µ–º–ª—é—é—Ç—å —Ç–∞–∫—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏:

—Ñ–∞–π–ª–∏;
—Å–æ–∫–µ—Ç–∏;
–∫–∞–Ω–∞–ª–∏ (—É—Å—ñ POSIX –û–°);
—Ä–æ–∑–¥—ñ–ª—å–Ω–∞ –ø–∞–º'—è—Ç—å (—É—Å—ñ POSIX –û–°);
—Å–µ–º–∞—Ñ–æ—Ä–∏ (—É—Å—ñ POSIX –û–°);
—Å–∏–≥–Ω–∞–ª–∏ –∞–±–æ –ø–µ—Ä–µ—Ä–∏–≤–∞–Ω–Ω—è (–∫—Ä—ñ–º Windows);
—Å–µ–º–∞—Ñ–æ—Ä–∏ (—É—Å—ñ POSIX –û–°);
—á–µ—Ä–≥–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å.


–ù–∞–π–±—ñ–ª—å—à—É —Å–∫–ª–∞–¥–Ω—ñ—Å—Ç—å –ø—Ä–∏ —Ä–æ–±–æ—Ç—ñ –∑ –ø—Ä–æ—Ü–µ—Å–∞–º–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –æ–±–º—ñ–Ω –¥–∞–Ω–∏–º–∏ –º—ñ–∂ –ø—Ä–æ—Ü–µ—Å–∞–º–∏, –æ—Å–∫—ñ–ª—å–∫–∏ —É –∫–æ–∂–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—É —Å–≤–æ—è —ñ–∑–æ–ª—å–æ–≤–∞–Ω–∞ –æ–±–ª–∞—Å—Ç—å –ø–∞–º'—è—Ç—ñ.



–ú–µ—Ö–∞–Ω—ñ–∑–º–∏ –æ–±–º—ñ–Ω—É –¥–∞–Ω–∏–º–∏ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ –û–° (–û–ø–µ—Ä–∞—Ü—ñ–π–Ω–æ—ó –°–∏—Å—Ç–µ–º–∏).



–ù–∞–π—É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω—ñ—à–∏–π –º–µ—Ö–∞–Ω—ñ–∑–º ‚Äî —Ü–µ —Ñ–∞–π–ª–∏. –ê–ª–µ –≤–∏ —Ç–∞–∫–æ–∂ –º–æ–∂–µ—Ç–µ —Å–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏—Å—è –º–µ—Ä–µ–∂–µ–≤–∏–º–∏ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏ (localhost), –ø—Ä–∏–º—ñ—Ç–∏–≤–∞–º–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –º–µ—Ä–µ–∂–µ–≤–∏—Ö —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ñ–≤ (pipe) —Ç–∞ –∑–∞–≥–∞–ª—å–Ω–æ—é –ø–∞–º'—è—Ç—Ç—é, –¥–µ —Ü–µ –º–æ–∂–ª–∏–≤–æ.



–£ –±—É–¥—å-—è–∫–æ–º—É —Ä–∞–∑—ñ, –∫—Ä—ñ–º –∑–∞–≥–∞–ª—å–Ω–æ—ó –ø–∞–º'—è—Ç—ñ, –¥–ª—è –æ–±–º—ñ–Ω—É –¥–∞–Ω–∏–º–∏ –º—ñ–∂ –ø—Ä–æ—Ü–µ—Å–∞–º–∏ –≤—Å—ñ –æ–±'—î–∫—Ç–∏ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è —Ç–∞ –¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è. –¶–µ–π –¥–æ–¥–∞—Ç–∫–æ–≤–∏–π –∫—Ä–æ–∫ —Å—Ç–≤–æ—Ä—é—î –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ CPU.



–ù–∞–π—à–≤–∏–¥—à–∏–º —ñ –Ω–∞–π–µ–∫–æ–Ω–æ–º–Ω—ñ—à–∏–º –∑ –ø–æ–≥–ª—è–¥—É —Ä–µ—Å—É—Ä—Å—ñ–≤ —Å–ø–æ—Å–æ–±–æ–º –æ–±–º—ñ–Ω—É –¥–∞–Ω–∏–º–∏ —î —Å–ø—ñ–ª—å–Ω–∞ –ø–∞–º'—è—Ç—å.

